package net.minecraft.utils;

import static org.lwjgl.opengl.GL11.glMultMatrixf;

import java.nio.FloatBuffer;

import org.lwjgl.BufferUtils;

public class GLU
{
    private static final float[] IDENTITY_MATRIX = new float[]
    {
        1, 0, 0, 0,
        0, 1, 0, 0,
        0, 0, 1, 0,
        0, 0, 0, 1
    };
    
    private static final FloatBuffer matrix = BufferUtils.createFloatBuffer(16);
    
    private static void gluPerspective(float fovy, float aspect, float zNear, float zFar)
    {
        float sine, cotangent, deltaZ;
        float radians = (float) (fovy / 2 * Math.PI / 180);
        
        deltaZ = zFar - zNear;
        sine = (float) Math.sin(radians);

        if ((deltaZ == 0) || (sine == 0) || (aspect == 0)) {
            return;
        }
        
        cotangent = (float) Math.cos(radians) / sine;
        makeIdentity(matrix);
        matrix.put(0 * 4 + 0, cotangent / aspect);
        matrix.put(1 * 4 + 1, cotangent);
        matrix.put(2 * 4 + 2, -(zFar + zNear) / deltaZ);
        matrix.put(2 * 4 + 3, -1);
        matrix.put(3 * 4 + 2, -2 * zNear * zFar / deltaZ);
        matrix.put(3 * 4 + 3, 0);
        glMultMatrixf(matrix);
    }
    
    private static void makeIdentity(FloatBuffer buffer)
    {
        int oldPos = buffer.position();
        buffer.put(IDENTITY_MATRIX);
        buffer.position(oldPos);
    }
}
